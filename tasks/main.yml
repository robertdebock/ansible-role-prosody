---
# tasks file for prosody

- name: Import assert.yml
  ansible.builtin.import_tasks:
    file: assert.yml
  run_once: true
  delegate_to: localhost

- name: Install prosody
  ansible.builtin.package:
    name: "{{ prosody_packages }}"
    state: present

- name: Create prosody directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ prosody_user }}"
    group: "{{ prosody_group }}"
    mode: "0755"
  loop:
    - "{{ prosody_data_directory }}"
    - "{{ prosody_log_directory }}"
    - "{{ prosody_config_directory }}/conf.d"

- name: Configure prosody
  ansible.builtin.template:
    src: prosody.cfg.lua.j2
    dest: "{{ prosody_config_directory }}/prosody.cfg.lua"
    owner: "{{ prosody_user }}"
    group: "{{ prosody_group }}"
    mode: "0644"
  notify:
    - Validate prosody configuration
    - Restart prosody

- name: Import ssl.yml
  ansible.builtin.import_tasks:
    file: ssl.yml
  when:
    - prosody_https_enable

- name: Import vhosts.yml
  ansible.builtin.import_tasks:
    file: vhosts.yml
  when:
    - prosody_vhosts is defined

- name: Import components.yml
  ansible.builtin.import_tasks:
    file: components.yml
  when:
    - prosody_components_enable
    - prosody_components is defined

- name: Import muc.yml
  ansible.builtin.import_tasks:
    file: muc.yml
  when:
    - prosody_muc_enable

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Start and enable prosody
  ansible.builtin.service:
    name: "{{ prosody_service }}"
    state: started
    enabled: true
